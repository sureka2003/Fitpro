BUSINESS PROBLEMS - FITPRO GYM


Retrieve the name and membership_type of female members.


```sql
SELECT m.name, ms.membership_type
FROM memberships AS ms
JOIN members AS m ON ms.member_id = m.member_id
WHERE m.gender = 'F';
```

Find members who have a Monthly membership and joined after 2023-11-01.


select member_id,age,gender
from memberships
where membership_type = 'Monthly'
and join_date > '2023-11-01';


 List the name and status of active members over 25.


select m.name,ms.status
from memberships as ms
join members as m on m.member_id = ms.member_id
where status = 'Active'
and age > 25;


Get details of visits on a specific date (2024-01-01).


select *
from visits
where visit_date = '2024-01-01';


List members with a Quarterly membership aged between 20 and 30.


select ms.member_id,m.name, ms.age,ms.gender
from memberships as ms
join members as m on m.member_id = ms.member_id
where ms.membership_type = 'Quarterly'
and ms.age between 20 AND 30;



ADDITIONAL AGGREGATIONS AND GROUPING: 


Count the total visits made by each member.


select member_id,
count (member_id) as no_of_visits
from visits
group by member_id
Order by no_of_visits DESC;


Count of members by membership type 


select membership_type,
count(member_id)
from memberships
group by membership_type;


Calculate the average age of members. Grouped by membership type


select membership_type, 
avg(age) as avg_age
from memberships
group by membership_type
order by avg_age ASC;


Calculate total visits of each visit date


select visit_date, 
count(visit_id)
from visits
group by visit_date;


Count members by status


select status, 
count(member_id)
from memberships
group by status;


ADVANCED QUERIES:


Identify the top 3 members with the highest visits.


SELECT member_id, 
       COUNT(visit_id) AS visit_count
FROM Visits
GROUP BY member_id
ORDER BY visit_count DESC
LIMIT 3;


List active monthly members grouped by membership type,sorted by top 2 join dates.


select membership_type,
count(member_id)
from memberships
where membership_type = 'Monthly'
AND
      Status = 'Active'
group by membership_type
Order by max(Join_date) DESC
Limit 2 ;


Retrieve members with more than 2 visits,sorted by total visits,displaying the top 5.


select member_id, 
count(visit_id) as total_visits
from visits
group by member_id
Having count(visit_id) > 2
order by total_visits DESC
Limit 5;


Identify members joined in 2023, grouped by membership type (with each group having more than 1 member).


select membership_type, 
count(member_id) as total_no_of_members,
extract(year from join_date) as join_year
from memberships
where extract(year from join_date) = 2023 
group by membership_type,join_year
Having count(member_id)>1;


Find the average age of members who have Active membership status, grouped by membership_type, ordered by membership_type alphabetically, and limit them  to 3.


select membership_type,
avg(age)
from memberships
where status = 'Active'
group by membership_type
order by membership_type ASC
Limit 3;
